pluginInfo:
  # This is default sample specification
  # Feel free to change it
  # Call flowpdk showdoc pluginspec to see the list of available fields and their description
  pluginName: 'EC-GCloud'
  version: '1.0.0'
  description: 'Integration with gcloud command-line tool to create and manage Google Cloud resources.'
  author: 'CloudBees'
  supportUrl: https://cloudbees.com
  category: 'Utilities'
  shell: 'ec-groovy'
  supportLevel: 10
  hasAdoc: true
  help: https://docs.cloudbees.com/plugins/cd/ec-gcloud
  label: gcloud tool
  detailedDescription: |
    The https://cloud.google.com/sdk/gcloud[``gcloud`` command-line tool] is the primary CLI tool to create and manage Google Cloud resources. You can use this tool to perform many common platform tasks either from the command line or in scripts and other automations.

    For example, you can use the gcloud tool to create and manage:

    * Compute Engine virtual machine instances and other resources
    * Cloud SQL instances
    * Google Kubernetes Engine clusters
    * Dataproc clusters and jobs
    * Cloud DNS managed zones and record sets
    * Cloud Deployment Manager deployments

    You can also use the ``gcloud`` tool to deploy App Engine applications, manage authentication, customize local configuration, and perform other tasks.

# Plugin configuration description
configuration:
  # This is a shell used for checking connection
  shell: 'ec-groovy'
  # A script for checking connection will be generated
  checkConnection: 'true'
  # A set of fields will be added to process debug level in the configuration
  hasDebugLevel: true
  resourceName: $[checkConnectionResource]
  parameters:
  -
    name: config
    documentation: The name for the created configuration
    required: true
    type: entry
    label: Configuration Name
  -
    name: desc
    documentation: Description for the configuration
    required: false
    type: entry
    label: Description
  -
    name: gcloudPath
    label: gcloud Path
    documentation: An absolute or relative path to gcloud executable.
    required: true
    type: entry
    value: /usr/bin/gcloud
  -
    name: gcpCconfigurationName
    label: GCP Configuration Name
    documentation: The name of the Google Cloud Platform configuration.
    required: true
    type: entry
    value: default
  -
    name: authType
    type: radio
    options:
      - name: Key
        value: key
      - name: Instance metadata
        value: env
    required: false
    defaultValue: env
    label: Authorization type
    documentation: |
      Authorization type: either provide a JSON key file or use the instance metadata (a service account should be assigned to the instance) to authenticate API calls.
  -
    name: credential
    label: Service account key
    documentation: |
      Service account key in JSON format. For example,

        {
          "type": "service_account",
          "project_id": "PROJECT ID",
          "private_key_id": "PRIVATE KEY ID",
          "private_key": "-----BEGIN PRIVATE KEY-----PRIVATE KEY CONTENT-----END PRIVATE KEY-----\n",
          "client_email": "SERVICE ACCOUNT NAME@PROJECT ID.iam.gserviceaccount.com",
          "client_id": "CLIENT ID",
          "auth_uri": "https://accounts.google.com/o/oauth2/auth",
          "token_uri": "https://oauth2.googleapis.com/token",
          "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
          "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/ACCOUNT ID"
        }

    htmlDocumentation: |
      Service account key in JSON format. For example,<br/>
      <pre>
      {
        "type": "service_account",
        "project_id": "PROJECT ID",
        "private_key_id": "PRIVATE KEY ID",
        "private_key": "-----BEGIN PRIVATE KEY-----PRIVATE KEY CONTENT-----END PRIVATE KEY-----\n",
        "client_email": "SERVICE ACCOUNT NAME@PROJECT ID.iam.gserviceaccount.com",
        "client_id": "CLIENT ID",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/ACCOUNT ID"
      }
      </pre>
    required: false
    hideUserNameField: true
    type: credential
    credentialType: key
    keyLabel: Service account key
    dependsOn: authType
    condition: ${authType} == 'key'
    label: Credential
  -
    name: projectName
    label: Project Name
    documentation: The name of the Google Cloud Platform project.
    required: false
    type: entry
  -
    name: gcpProprties
    label: GCP Properties
    required: false
    type: textarea
    documentation: |
      Properties to pass to the configuration in format: SECTION/PROPERTY VALUE.
      Eg.: compute/zone asia-east1-b
  -
    name: checkConnectionResource
    label: Check Configuration Resource
    documentation: A resource that is used for the checking configuration. gcloud CLI must be installed on the resource.
    required: false
    type: entry

procedures:
-
  name: 'Run Custom Command'
  description: 'This procedure allows run any gcloud command.'
  # configuration field will be generated automatically
  hasConfig: true
  parameters:
  -
    name: group
    label: Group Of Commands
    required: true
    type: entry
    documentation: Name of the group of the commands.
  -
    name: command
    label: Command
    required: true
    type: entry
    documentation: Name of the command.
  -
    name: subCommands
    label: Sub Command
    required: false
    type: textarea
    documentation: Name of the subcommands.
  -
    name: options
    label: Options
    required: false
    type: textarea
    documentation: "Options to pass to gcloud executable. Eg.: --option-name [paramerer]."
  #~ -
    #~ name: actionOnError
    #~ htmlDocumentation: Ignore error exception in specified cases.
    #~ label: Action On Error
    #~ type: select
    #~ required: true
    #~ value: 0
    #~ options:
      #~ - name: Throw error
        #~ value: 0
      #~ - name: Ignore If Matched
        #~ value: '=~'
      #~ - name: Ignore If Not Matched
        #~ value: '!~'
  #~ -
    #~ name: errorValue
    #~ label: Error Value
    #~ required: false
    #~ type: entry
    #~ documentation: Text for checking error condition.
    #~ dependsOn: actionOnError
    #~ condition: ${actionOnError} != "0"
  -
    name: resultPropertySheet
    label: Result Property Sheet
    required: true
    type: entry
    documentation: Results will be saved into this property/property sheet.
    value: /myJob/runCustomCommand

  outputParameters:
    runCustomCommand: 'STDOUT after accomplishing the command.'
-
  name: 'Run Anything'
  description: 'This procedure allows run any commands.'
  hasConfig: true
  parameters:
  -
    name: anything
    label: Anything
    required: true
    type: textarea
    documentation: Anything to execution.
  -
    name: resultPropertySheet
    label: Result Property Sheet
    required: true
    type: entry
    documentation: Results will be saved into this property/property sheet.
    value: /myJob/runAnything

  outputParameters:
    runAnything: 'STDOUT after accomplishing the command.'
